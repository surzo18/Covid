<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABK6SURBVHhe7V0JdFRVmg7tGZcZp9u21ba1GzVEBLIACSEkkJAFEkIWSCBANrIQQkLi0tjTGASN
        2NqxwZlBUVrDpo3IoCiLGxAHGkW0j4MoAdzQg9OAM0cCQk6zpMM33/9y7+NWpSokqcIkZ+o75zv17v9/
        /3//e9/Le69uvar4+eCDDz744IMPPvjggw8++OCDS9x0N+646U6sIb8h4YaHyDWiVWE+eAM3VyKeE3vW
        mOiL8ewvKxGrwn3wBL3L8VNO5jESHeQx/1L8RKXxobPoXYH8WyoAxYNsBypXK4iPmq+0vncl8pTLh87C
        vxxVt80EFBcos1tQs1Drby3HbGX2obPwL0Nun3JA8aB/BfoqVyuITzRaz52Xo1w+dBZyHu87A8f7lgEG
        v+wzEwFK4ifbYnPSNATciR8riQ+eoH8ZMvrNwFkSBquU20+2nXxnJUa5//8icAYmDihFHfkdeah/KVYG
        zcSvlLtDCCzDUObYTUKxWrn8ZNuw7xatcnUIUlvgdDzHHIdIqblOxqDcPQdZWbgsqAS1wdOBVizB0aBS
        9FHSDoHxDxu55iqzX3Ap5tn2EsxX5g4hcBoCpDYjv00Zi4xJSbs3pNCBJVhFog1uUfJ2I4zXAsZ9ZOSY
        rFx+ISXINuy7Ratc7QZzbDVyuOKqbr8TpMBQFho6DdAcPA21gwpxTVgxEtk+p+znQ8pwgwpzi8HFGBha
        jDnkW4xpVLHCE5zk65TMb3ARrheb4W+0YiS2BCFK5hbhhbjRiD03pASjg/kGkNvLDDtkbN12J0hhnORV
        Q4oBTbaf8vNDLyXxo22v7Z+GwcrsgJB83BA+DVXUfGZrHdkcXoxCJbcRXoQi8TlpNT+TnLKjlNwBUouh
        /USZCfSSMRg+GVP33AlDi1BLQjPCafJ5lIXT/nflb3aejIgS/HJoIZbQd0ZpXHEXJyFZhbRCRCHGisYp
        xqTkflr6UiEWpBbam5WmSWpVLgK9ZCzKp1mrnN0DUUWYGFkIaA4rdJx8QVQBag3NmahCVEcWIXVYESZz
        ewVtpw1/Cwtwiq/rqSkfUQx/leqiGJqP2yRGYlUOx7zsa1gBlkvfUgP5kNhsfxGeUakU0EvGZPtJtjOV
        s+vBya0bXgAo8uhwnHwB7elkk6FzyxEF+IQ7pTD5TlyhwjsNycH6iph3r3M/btg0ohBpKtwAekVNxTJD
        t1k5uh7RU9FAQhibfeHi6IyYAsRQ84XWOjNmKnaNzMNoVzvQc6BXdD6S2M8Hzv0a/Iz9R6uAVojmqcrQ
        fqfMXY+R+TgUm8/JJ+MLkCi2uAKExeXjWfocjqbILFxF3X6tVzwZm4fK6mr8SMkuGaQP1nUX+zzlVEO9
        1KZkFqR2GYOMRdrcTjL0X1ui7oD4XKyIz+Pkt7CJ7Xq+/t1u5yBGdLFZuJrtOmXXfDtxSufeHXuCUVPR
        Oy4P25xqqZMaLX8eYtluUnY9Jt1GQj6WWYm6A2QCR+XiKAk3/CKtFP/I1zoHew6W837+H1QaByRMxc84
        CZUJedjI148t5mLD6FxUJGXhWiXzCLydvJz5VjrUlIutqtaDTnaTR7rioGkTyZPRJykHW8jzJMhm8rTa
        Fu4ztkUzT4W2An2V5AmldcXjiTkoV3IPgV7M9SBz6rqRlIv99nYOzpAyFtk+PyYHm3ngtPuO7AdHIt9I
        peQgLDkL14/NQXVyNtCKbUw+B7jYZYwLMv8iFeYxxkzBg676ELsek7wqec/A2MlITZkCmBybjeXK3Qqp
        k1HppK+nviQ9GyHC1CmYnpKNfaaGtjIV7iHQi309Z+a28udgrBL0PKRNwqT0yYDNSXi71M05PyMDP6Pm
        hKGXt/yXK7cNsaVPwWpD10Cb164JzL3dyI1xU3rgcrRGxiQsHz8JUDzJwbi9cI3PQqXWZmShXiajeh8u
        r3oHj1W9iyPk4Tk7USM28VG3X+vHTcZMlcZjpGWhN3Oe0rnJ7nO30xFkZuIXmVn4GwnhBE6wcrkENRu1
        NnMiSsT2+DbULNwOmBSb+Jiv1Mi9XmzeAvu/x64lC6c5Foe1ox6BrAl4OmsiYDELuy72Jou6j7V+woSW
        JeQVdTiyvA5w4lFLn4VBdv6J+Ehs3gJzX8acH9j5ORbl6hnIzsZ1kyfgNAlhdoYsL7QN6vZo/eQMDBTb
        hjdxmIQT/yq+KRMw2NZPwG6xeROseYyR/0x+Rg+6A8rNRFVOJiDMzsTe9qztULdBx+RmYLrYdm5Ezbub
        ACf+XulnaH3OBO+egjSY+2O7j4we9IwRj5YDeRmAkJNZoMxtIm88KnUMuU8utPvW4vL9r6Bm/6s4bJHb
        YrszGVc49JHpvYuwCdZebNT0qTJ3b0xNR8jU8YDiKZks5WoT03grSf1xI3a17ATltiH56Ftj6I7lpOCn
        yu1VFBbiSuZv1H0VjkOwcnUNZKBF6ShgIbOL05FbmtX6w2/65hSNAxQ3KHO7UDQe5UascH/xeJQW85og
        ZHsGecDwQ/wq3CWm8v0Fa66kdmPxOHws5PYGvlbITlcyt5A43Rfz2M8iacgcsO48mRNrbsbjGuXyLkrS
        ED8tHQ0kDB7nQBwegOKOecv2p3X81FCchkVG/jZZko5/U2EuQU0lecKMceJx5mhzTUnGoPUyNmW2wNhM
        yaH9FtNwjLo4JfEOStPQb3oazpJwwbPTUlsehJKjge1G7StO6dyi1fRUlDG+QedxwWMcfJtHfmk6FruI
        c0keXG7XlGQMhraRp0DrccfScYhg292cnJk+1v0zrB1GeSrWlKUCigfLU7BAXg3bh2UpmDcjFR8Ztl0q
        vFOYloRrZ/DoY54N5B6LKVhPlrP/Ns/51FaSug6wrvryNJSU8/okpG068+xz0rhdU6J/l6H7SMbK7Q+1
        rSwNX8qccJ6+sm0pWK3CPcfMsfhmZgogrEhreT6fhdyubS7YXJ7s/umFS4kKnvPZ/wmjFrdrSvStNnQN
        stOV2wEVqRhLf7OhdaDMheg46UHaVpGCQ1awN1CZjPMkhMpkge0vtN3g8Yox7bv1vBTgKaLSqKW+mhMt
        60ezduKxWe/hCHl41q6WNSXxUbPf1o9xf826cwwKqTlhay/wcyUh0Muwn1dGz3H3GEBTmSz8OgkBdyVh
        3t1JqLknGfPvTsbke9Pcfyj/Q+CuMdioa70nqWVNacE21PxhO2BSbJY+GaW2fkzbb+i4c6+XMVpj5ZgZ
        M5c2h+dcdS6hMnkOTjQ0lanbgjV+rGvlJFhrSs9vxRESTrTWlO4ZjUFaT3q8pmTk8t5c3ZsIaCpTtwVr
        3KNrnZXUsqa05Q0c3vI64ERrTWnWKAzW+nuTPF9TsnORyuQ5fjsa0FQmC/fxFDR7FH5D+2zh7ERM+U1i
        1y5asY4NulbWZq0pfbIeNSScaK0pzR6NGVr/L4ltn4JkbDJGalvGy7HLHCi3BZ1LqEye475ROE9CqEwW
        qkbhS203eIL2IiXxCLIsfF8iwjjQccI58Qi92LI2+680atknF1pZPzr6EmrIw4r2mhI1B2x9gvuLMP3F
        5Pe29gIdLsKG3XsX4fsT8A0J4by4ltvQqgT01TYXbJ4b1/nPUqv5Zuf+eDzMPP/jlFcotod+Oxz/rOQO
        qOatJP3Hbf0orJadoNw2ZPLpX2PrEnDsvhGu31/MTUAq/c2G1oFzR7fchs5JRJBtS/Dibei8eLxIwmIc
        vnogHgu5fdC2xWMPbTV83a1tDyR07o2Y7GDGm7nd8cvqBAxQYQ6YG49yJ+1+5i0lBwo5OTNoO+CgoV+F
        twLH9oGh3a3GusewSb0LyK+1jTV4740Yj+Y7quNw5sE4wAXPVse3LEXwNPET6hq1b24MbrMStBM86m9h
        /LdGbrD9DbleyPZ/mz7y6P0xrj9npm+Rk9Y9Y+F2TYkT2UfrZGzy1yn26lgMY/ucQ54LujM8OLy3FCF4
        aCTi5o/EsfmxgMGGh2MxXkks0PaW9j88smMPTzHmP3UseWJ+HHJgfJgj2w/FIpd1fG/o3H7dib4yssHQ
        OlLG08aRL+D4Kgy9wxPRnJMM2o/b/hZ+x5hL8zsVNTzCH4nBVHI2mVMd0fp7uL8biTkkhI+MbP9y9KNx
        GKnjyLOPjkSk2O/5EL+4632UCmVbaYdTc07rqXX7RHN1JK6lZqbUwtc9FmOwXg6O37s555ugfpP0IWSO
        VsvRMifMl6vmZKq0latr8Eg0Qh6N4aS08OQT7fxAhtrFdlx0y4fgv9uBofN38AjbwSOrhQ3zt7d8e4WD
        fcbQPyE2b+NfI3EV8zfqfmpiuvgDmfbiDyNw4LFowOKI9t2SUvuOHRONBLE9/TZ2knDiu+JbMAKjbP0I
        7BCbt1ETjelGTT3jI0nBguGo4gRBca95HncH6vbrmMdi0F9sL23GSRJOPCm+hdEYoPXkPrF5E1Kz5DX6
        6Dkfyi+MxXWPD8dpEsKFkUhSLreg7h2tf1z9BWx/DTu3vQY40foLWDgco239cO//BSyIQoqR/wzbPevB
        3EVRePrfowCLkXh/7UW+2knNk4Z+idjq1yG8/lU0kFBsEJulj8Kztj7Ke09JC6RW5vyLzi9jUa6egyeH
        46YnIvE3EhajcJdyuQQHGmNrI3FuUSSixP6/a3HjkZcxXSjbYlsUgRHUNGm9tMXuLSwahlk6N3n6iYge
        +GiiYPEwLCeh2Pjk0LbfmD01DFsN/cnFEcg3rx/VfvgR7QWWT+siHD8o9xSLo3AL857S+VnTUuXqeVgy
        DJOWRAAGt60NbL0uo/FUOH5FzVGnmL+SGxQPK5vmkSWRuFmFewypjTl3mH38MaIHP57+x3CkPTMUcOLK
        tu6KaoehPzVfOMW44ufPhKGfCvMYUhNzPu/Uh+yAnvUFjRXhuLE2AmHkz58Nx0O14UArDsGDSu4STwXi
        6tqhqKb221ax4Tgq8aJRcq9A9efcl1WrjEXGJGNT8u6HpaEIWDYEdcuHAIrN5Bmj/YmxfX4FB3ax9wdy
        zl86BIOZN13ICRgkNuX2CqQG5q6Wmoz66o1tGYOMRbe3ylhVePfA82HovTIM35Jww/0rYnHlylBsdbI/
        19Y14VLjiQBcsXII/uRQE2tcG4mrngvDpw52Rx5dzuuVStP1WBWK5/8UCiieWxWGer422e0hGC46TvbV
        1G5Vds3tLwzGLVaiHxDPh+A29r3DrEVqo/2fxM92NHlO+WQse422aFdYiboDOIGHSAhXD2r5MsYLoQh7
        YRCeYaGplkhBji7q6rVe8RS1d1/szZo3IH2wtl+zz0anGj6R2pTMwouDkEL70zIWaa8aiERD331+qoCF
        NpAQrg5z/1zQiyGIpuYzrXXBD1aHYszFrg2dgeRcMxjJ7OMvTn3a5MHzqdSoQlph7WBcb+iPKXPXY20I
        z5sDAcWlriaQmnT6mgxdW6ynftqKW3GlCu80JMdLIShhzn1Ofbhj03+EtP65GhkTfUsNXYd/9+6S4eUQ
        TCChuS4ETznvBNpqDc3plwfigXX8E6d94svBWGbZjByKjeRGTuDMdcHtf9JatBLD2E0qh3Ne6Wup9C01
        SC3K1uIf6PiDTTIWGZPtJ18KRq5ydw+8EoTaV4IBzVeDHHfCukCE096k/M3y56xcFnhE3Swx9J1WGlfc
        xZ3l9o3RuiDu0GC87yJO87T0IX2pEAuvhOAG+pqVpunlIAxRLmvyVV1mnpXK3X0gF7cNQVhFQnO9005g
        e6/tH+D6R/s29cV1G4Mxm5oDttaRzfS3+tE+2ovFZ+hMHpCcklvJHbApBKFaKzUqszX5MgYjj3DVD3Gz
        0ClIYZtY4KZAwOYALHs9EDe+Fogkts8p+3k56lSYW7wejGDGV20MxJuMaVSxwhNvGH9Bkou27w1/o4q5
        77X+CFIyt+Ck/tyIPSe1Sk6+LjXskLF128nXWOuHy14bgFWvDwDcsn/Hf2/tjQD8mLG7dQ5O7BTl8uMO
        ztb2Nwbgv0SrXO0GY7fqHK4oY5KxKXn3hhT61gCseKs/4IJH6vp27qtLjJ2v87zZ/8JPF7M9T9vJTv10
        8RtB6MPYo0aeC+yH5T1m8k1suQN5W/phJ3mK/HpLfyx5u2/nlo83D0AEc+wmIdzc78KPd8u2totGtMrV
        IUhtUiNzfE1KzTs339HN7na6Alv7IbPuDpwlYbPfhWd0ZNvBRy0n0/fz9d7Atltxzba+OE7C5u34/O2A
        C99M2dYHAbR/4aBhzFZ/3z/x8Rg7ApD359sBxYN/9m95EtkVxGdpLuh9/8LEU7wbgKp3AgDhjtsv/k98
        qFuo9aTvn/h4ip0ByH+vD2DRH1/t7OP+vp7+YOq+1nrG+v6Nlaf4iNeA9/1xjESHeBu++9B3DfAOdgUg
        9gN/nHE50S4o2vduxUgV7oM3wEnty8ldvcsfh5wnXFP5VotWhfnggw8++OCDDz744IMPPvjggwk/v/8D
        aFKutMFA9F4AAAAASUVORK5CYII=
</value>
  </data>
</root>